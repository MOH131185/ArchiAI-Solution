version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: archiai-postgres
    environment:
      POSTGRES_DB: archiai
      POSTGRES_USER: archiai_user
      POSTGRES_PASSWORD: archiai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - archiai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: archiai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - archiai-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: archiai-backend
    environment:
      - DATABASE_URL=postgresql://archiai_user:archiai_password@postgres:5432/archiai
      - REDIS_URL=redis://redis:6379
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - MAPBOX_API_KEY=${MAPBOX_API_KEY}
      - CLIMATE_API_KEY=${CLIMATE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./exports:/app/exports
      - ./cost_estimates:/app/cost_estimates
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - archiai-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: archiai-frontend
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - archiai-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: archiai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - archiai-network

volumes:
  postgres_data:
  redis_data:

networks:
  archiai-network:
    driver: bridge
